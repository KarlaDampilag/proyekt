# import * from './generated/prisma.graphql' 

type SuccessMessage {
    message: String
}

type Mutation {
    signUp(email: String!, password: String!, confirmPassword: String!): User!
    confirmEmail(confirmEmailToken: String!, email: String!): User!
    signOut: SuccessMessage
    signIn(email: String!, password: String!): User!
    createProduct(name: String!, salePrice: String!, costPrice: String, unit: String, notes: String, image: String, largeImage: String, categories: [String]): Product!
    createCategory(name: String!): Category!
    createCategories(names: [String!]!): [String!]!
    updateProduct(id: ID!, name: String, salePrice: String, costPrice: String,  unit: String, notes: String, image: String, largeImage: String, categories: [String]): Product!
    deleteProduct(id: ID!): Product!
    # requestReset(email: String!): SuccessMessage
    # resetPassword(resetToken: String!, password: String!, confirmPassword: String!): User!
    # updatePermissions(permissions: [Permission], userId: ID!): User
    # addToCart(id: ID!): CartItem
    # removeFromCart(id: ID!): CartItem
    # createOrder(token: String!): Order!
}

type Query {
    # items(where: ItemWhereInput, orderBy: ItemOrderByInput, skip: Int, first: Int): [Item]!
    # item(where: ItemWhereUniqueInput!): Item
    # itemsConnection(where: ItemWhereUniqueInput): ItemConnection!
    me: User
    users: [User]!
    products(where: ProductWhereInput, orderBy: ProductOrderByInput, skip: Int, first: Int): [Product]!
    product(where: ProductWhereUniqueInput!): Product
    productsConnection(where: ProductWhereUniqueInput): ProductConnection!
    categories: [Category]!
}

type User {
  id: ID!
  email: String!
  role: String!
  verified: Boolean!
  name: String
  permissions: [Permission!]!
}